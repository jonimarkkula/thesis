/****************************************************************************
 *   $Id:: uarttest.c 4015 2010-07-28 22:28:05Z usb00423                    $
 *   Project: NXP LPC11Uxx UART example
 *
 *   Description:
 *     This file contains UART test modules, main entry, to test UART APIs.
*
****************************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.

* Permission to use, copy, modify, and distribute this software and its
* documentation is hereby granted, under NXP Semiconductors'
* relevant copyright in the software, without fee, provided that it
* is used in conjunction with NXP Semiconductors microcontrollers.  This
* copyright, permission, and disclaimer notice must appear in all copies of
* this code.

****************************************************************************/
#include "LPC11Uxx.h"
#include "uart.h"
#include "gpio.h"

extern volatile uint32_t UARTCount;
extern volatile uint8_t UARTBuffer[BUFSIZE];


int main (void) {

  SystemCoreClockUpdate();

  /*PIO11 Configuration*/
  GPIOSetDir( 0 , 2 , 1);
  GPIOSetDir( 1 , 28 , 1);

  GPIOSetBitValue( 0 , 2 , 1);

  /* NVIC is installed inside UARTInit file. */
  UARTInit(9600);


  /* Loop forever */
  while (1)
  {
    // UARTSend("TEST\r\n", 8);
	_delay_ms(10);

	if ( UARTCount != 0 )
	{
	  LPC_USART->IER = IER_THRE | IER_RLS;			/* Disable RBR */
	  UARTSend( (uint8_t *)UARTBuffer, UARTCount );
	  printf("UARTBUFFER: %s\n", UARTBuffer);

	  UARTCount = 0;
	  LPC_USART->IER = IER_THRE | IER_RLS | IER_RBR;	/* Re-enable RBR */
	}
	if(strcmp(UARTBuffer, "O") == 0){

		GPIOSetBitValue( 1 , 28 , 1);

	}
	else if(strcmp(UARTBuffer, "F") == 0){

		GPIOSetBitValue( 1 , 28 , 0);

	}
  }
}

/*Function to delay the program for X amount of milliseconds*/
void _delay_ms (uint16_t ms)
{
	 uint16_t delay;
	 volatile uint32_t i;
	 for (delay = ms; delay >0 ; delay--)
	 //1ms loop
	  {
	  for (i=3500; i >0;i--){};
	  }
}
